{"version":3,"sources":["components/InputForm/InputForm.module.css","components/Filter/Filter.module.css","components/PbookList/PbookList.module.css","redux/entries/entries-selectors.js","components/InputForm/InputForm.jsx","redux/entries/entries-operations.js","components/Filter/Filter.jsx","components/PbookList/PbookList.jsx","views/ContactsView/ContactsView.jsx"],"names":["module","exports","getAllEntries","state","contacts","items","entries","getFilteredContacts","createSelector","filter","filterValue","entry","name","includes","InputForm","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","className","styles","newEntrySection","onSubmit","event","preventDefault","find","error","title","text","icons","target","reset","addEntryRequest","axios","post","then","responce","data","addEntrySuccess","catch","addEntryError","message","type","onChange","value","required","newEntryButton","Filter","onChangeFilter","PbookList","useEffect","fetchEntriesRequest","get","fetchEntriesSuccess","fetchEntriesError","onDelete","id","dataset","deleteEntryRequest","delete","deleteEntrySuccess","deleteEntryError","pbookHeader","pbookList","map","controlBtnContainer","entryControlBtn","data-id","onClick","ContactsView"],"mappings":"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","file":"static/js/contacts-view.b16b83aa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"newEntrySection\":\"InputForm_newEntrySection__3416G\",\"newEntryButton\":\"InputForm_newEntryButton__l87D5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__3MnCm\",\"filter-label\":\"Filter_filter-label__23nJq\",\"filter-input\":\"Filter_filter-input__1eze-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry\":\"PbookList_entry__3UiHW\",\"pbookList\":\"PbookList_pbookList__3PN4E\",\"pbookHeader\":\"PbookList_pbookHeader__2S3sS\",\"controlBtnContainer\":\"PbookList_controlBtnContainer__1QYul\",\"entryControlBtn\":\"PbookList_entryControlBtn__11hXX\"};","import { createSelector } from 'reselect';\n\nexport const getAllEntries = state => state.contacts.items.entries;\nconst getFilterState = state => state.contacts.filter;\nexport const getLoadingState = state => state.contacts.items.loading;\n\nexport const getFilteredContacts = createSelector(\n    [getAllEntries, getFilterState],\n    (entries, filterValue) => entries.filter((entry) => entry.name.includes(filterValue))\n)\n","import React, { useState } from 'react';\nimport { error } from '@pnotify/core';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addEntry } from '../../redux/entries/entries-operations';\nimport { getAllEntries } from '../../redux/entries/entries-selectors';\nimport styles from './InputForm.module.css';\n\nexport default function InputForm() {\n  const dispatch = useDispatch();\n  const entries = useSelector(getAllEntries);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onNameInput = event => {\n    setName(event.target.value);\n  };\n\n  const onNumberInput = event => {\n    setNumber(event.target.value);\n  };\n\n  const onSubmitEntry = event => {\n    event.preventDefault();\n    if (entries.find(entry => entry.name === name)) {\n      error({\n        title: 'Error!',\n        text: `Notice me, senpai! It's me, ${name}, I'm already in the list!`,\n        icons: 'brighttheme',\n      });\n      event.target.reset();\n      return;\n    }\n    dispatch(addEntry({ name, number }));\n    event.target.reset();\n  };\n\n  return (\n    <section className={styles.newEntrySection}>\n      <form className=\"inputForm\" onSubmit={onSubmitEntry}>\n        <label className=\"inputLabel\">\n          First / Last name :\n          <input\n            className=\"inputField\"\n            type=\"text\"\n            onChange={onNameInput}\n            required\n          />\n        </label>\n        <label className=\"inputLabel\">\n          Phone number :\n          <input\n            className=\"inputField\"\n            type=\"tel\"\n            onChange={onNumberInput}\n            required\n          />\n        </label>\n        <button className={styles.newEntryButton} type=\"submit\">\n          Add entry\n        </button>\n      </form>\n    </section>\n  );\n}\n","import axios from 'axios';\n\nimport {\n    addEntryRequest,\n    addEntrySuccess,\n    addEntryError,\n    deleteEntryRequest,\n    deleteEntrySuccess,\n    deleteEntryError,\n    fetchEntriesRequest,\n    fetchEntriesSuccess,\n    fetchEntriesError,\n} from './entries-actions';\n\nexport const fetchEntries = () => dispatch => {\n    dispatch(fetchEntriesRequest());\n    axios.get('/contacts')\n        .then(responce => dispatch(fetchEntriesSuccess(responce.data)))\n        .catch(error => dispatch(fetchEntriesError(error.message)))\n}\n\nexport const addEntry = entry => dispatch => {\n\n    dispatch(addEntryRequest());\n    axios.post('/contacts', entry)\n        .then(responce => responce.data)\n        .then(data => dispatch(addEntrySuccess(data)))\n        .catch(error => { dispatch(addEntryError(error.message)) })\n}\n\nexport const deleteEntry = id => dispatch => {\n\n    dispatch(deleteEntryRequest());\n    axios.delete(`/contacts/${id}`)\n        .then(() => dispatch(deleteEntrySuccess(id)))\n        .catch(error => dispatch(deleteEntryError(error.message)))\n}\n\n\n","import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { onChangeFilter } from '../../redux/filter/filter-actions';\nimport styles from './Filter.module.css';\n\n// const mapDispatchToProps = dispatch => ({\n//   onChangeFilter: value => dispatch(onChangeFilter(value)),\n// });\n\n// export default connect(null, mapDispatchToProps)(Filter);\n\nexport default function Filter() {\n  const dispatch = useDispatch;\n\n  const filterChangeHandler = event => {\n    dispatch(onChangeFilter(event.target.value));\n  };\n\n  return (\n    <div className={styles['filter']}>\n      <label className={styles['filter-label']}>\n        Find contacts by name\n        <br />\n        <input\n          className={styles['filter-input']}\n          type=\"text\"\n          onChange={filterChangeHandler}\n        />\n      </label>\n    </div>\n  );\n}\n","import React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  deleteEntry,\n  fetchEntries,\n} from '../../redux/entries/entries-operations';\nimport { getFilteredContacts } from '../../redux/entries/entries-selectors';\nimport styles from './PbookList.module.css';\n\nexport default function PbookList() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(fetchEntries()), [dispatch]);\n\n  const entries = useSelector(getFilteredContacts);\n\n  const onDelete = event => dispatch(deleteEntry(event.target.dataset.id));\n\n  return (\n    <section>\n      <div className={`${styles.entry} ${styles.pbookHeader}`}>\n        <span>Name</span>\n        <span>Phone number</span>\n        <span>Actions</span>\n      </div>\n      <ul className={styles.pbookList}>\n        {entries.map(entry => (\n          <li key={entry.id} className={styles.entry}>\n            <span>{entry.name}</span>\n            <span>{entry.number}</span>\n            <div className={styles.controlBtnContainer}>\n              <button\n                className={styles.entryControlBtn}\n                type=\"button\"\n                data-id={entry.id}\n                onClick={onDelete}\n              >\n                Delete\n              </button>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n}\n","import React from 'react';\nimport InputForm from '../../components/InputForm/';\nimport Filter from '../../components/Filter';\nimport PbookList from '../../components/PbookList';\n\nexport default function ContactsView() {\n  return (\n    <div className=\"container\">\n      <h1>PhoneBook / home</h1>\n      <InputForm />\n      <Filter />\n      <PbookList />\n    </div>\n  );\n}\n"],"sourceRoot":""}