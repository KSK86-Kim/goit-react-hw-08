{"version":3,"sources":["redux/auth/auth-selectors.js","redux/auth/auth-operations.js","components/UserMenu/UserMenu.module.css","components/Navigation/Navigation.module.css","redux/filter/filter-actions.js","redux/auth/auth-actions.js","components/AuthMenu/AuthMenu.module.css","components/NavHeader/NavHeader.module.css","redux/entries/entries-reducer.js","redux/filter/filter-reducer.js","redux/auth/auth-reducer.js","redux/store.js","components/UserMenu/UserMenu.jsx","components/AuthMenu/AuthMenu.jsx","components/Navigation/Navigation.js","components/NavHeader/NavHeader.jsx","components/PrivateRoute.js","components/PublicRoute.js","routes.js","App.js","index.js","redux/entries/entries-actions.js"],"names":["isAuthentificated","state","auth","isLoggedIn","currentUserEmail","user","email","currentUserName","name","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","authActions","registerRequest","post","then","response","data","registerSuccess","catch","error","registerError","message","login","loginRequest","loginSuccess","loginError","logout","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","module","exports","onChangeFilter","createAction","entries","createReducer","fetchEntriesSuccess","_","payload","addEntrySuccess","number","id","deleteEntrySuccess","filter","entry","fetchEntriesError","alert","addEntryError","deleteEntryError","loading","fetchEntriesRequest","addEntryRequest","deleteEntryRequest","combineReducers","filterReducer","action","initialUserState","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","contactsReducer","items","entryReducer","rootReducer","persistReducer","authReducer","contacts","store","configureStore","reducer","persistor","persistStore","UserMenu","useDispatch","className","styles","userMenu","userEmail","logoutBtn","type","onClick","authOps","AuthMenu","s","userNav","activeClassName","exact","to","Navigation","isLoding","useSelector","nav","link","connect","header","Component","component","redirectTo","routeProps","render","props","restricted","routes","home","DefaultView","lazy","LoginView","RegisterView","ContactsView","DefaultLoggedInView","App","useEffect","fallback","path","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.194d86aa.chunk.js","sourcesContent":["const isAuthentificated = state => state.auth.isLoggedIn;\nconst currentUserEmail = state => state.auth.user.email;\nconst currentUserName = state => state.auth.user.name;\n\nexport { isAuthentificated, currentUserEmail, currentUserName };","import axios from 'axios';\nimport authActions from './auth-actions';\n\naxios.defaults.baseURL = 'https://connections-api.herokuapp.com';\n\nconst token = {\n    set(token) {\n        axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n     },\n    unset() {\n        axios.defaults.headers.common.Authorization = ``;\n    }\n}\n\nconst register = credentials => dispatch => {\n    dispatch(authActions.registerRequest());\n    axios.post('/users/signup', credentials)\n        .then(response => {\n            token.set(response.data.token);\n            dispatch(authActions.registerSuccess(response.data));\n        })\n        .catch(error => dispatch(authActions.registerError(error.message)));\n}\n\nconst login = credentials => dispatch => {\n    dispatch(authActions.loginRequest());\n    axios.post('/users/login', credentials)\n        .then(response => {\n            token.set(response.data.token);\n            dispatch(authActions.loginSuccess(response.data))\n        })\n        .catch(error => dispatch(authActions.loginError(error.message)));\n}\n\nconst logout = () => dispatch => {\n    dispatch(authActions.logoutRequest());\n    axios.post('/users/logout')\n        .then(() => {\n            token.unset();\n            dispatch(authActions.logoutSuccess())\n        })\n        .catch(error => dispatch(authActions.logoutError(error.message)));\n}\n\nconst getCurrentUser = () => (dispatch, getState) => {\n    const persistedToken = getState().auth.token;\n    if (!persistedToken) return;\n    token.set(persistedToken);\n    dispatch(authActions.getCurrentUserRequest);\n    axios.get('/users/current')\n        .then(response => dispatch(authActions.getCurrentUserSuccess(response.data)))\n        .catch(error => dispatch(authActions.getCurrentUserError(error.message)));\n}\n\nexport default {\n    register,\n    login,\n    logout,\n    getCurrentUser\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"UserMenu_userMenu__1X1Ek\",\"userEmail\":\"UserMenu_userEmail__2Tp2Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__3r9t7\",\"activeLink\":\"Navigation_activeLink__2aQnF Navigation_link__3r9t7\"};","import { createAction } from '@reduxjs/toolkit';\n\nexport const onChangeFilter = createAction('changeFilter');\n","import { createAction } from '@reduxjs/toolkit';\n\n\nconst registerRequest = createAction('auth/registerRequest');\nconst registerSuccess = createAction('auth/registerSuccess');\nconst registerError = createAction('auth/registerError');\n\nconst loginRequest = createAction('auth/loginRequest');\nconst loginSuccess = createAction('auth/loginSuccess');\nconst loginError = createAction('auth/loginError');\n\nconst logoutRequest = createAction('auth/logoutRequest');\nconst logoutSuccess = createAction('auth/logoutSuccess');\nconst logoutError = createAction('auth/logoutError');\n\nconst getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nconst getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nconst getCurrentUserError = createAction('auth/getCurrentUserError');\n\nexport default {\n    registerRequest,\n    registerSuccess,\n    registerError,\n    loginRequest,\n    loginSuccess,\n    loginError,\n    logoutRequest,\n    logoutSuccess,\n    logoutError,\n    getCurrentUserRequest,\n    getCurrentUserSuccess,\n    getCurrentUserError\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"userMenu\":\"AuthMenu_userMenu__2vDmP\",\"userEmail\":\"AuthMenu_userEmail__3ZX9p\",\"link\":\"AuthMenu_link__2pfTb\",\"activeLink\":\"AuthMenu_activeLink__nFXRs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"NavHeader_header__1vO-H\"};","\nimport { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport {\n    fetchEntriesRequest,\n    fetchEntriesSuccess,\n    fetchEntriesError,\n    addEntryRequest,\n    addEntrySuccess,\n    addEntryError,\n    deleteEntryRequest,\n    deleteEntrySuccess,\n    deleteEntryError,\n} from './entries-actions';\n\nconst entries = createReducer([], {\n    [fetchEntriesSuccess]: (_, { payload }) => payload,\n    [addEntrySuccess]: (state, { payload }) => [...state, { name: payload.name, number: payload.number, id: payload.id }],\n    [deleteEntrySuccess]: (state, { payload }) => state.filter(entry => entry.id !== payload),\n});\n\nconst error = createReducer('', {\n    [fetchEntriesError]: (_, { payload }) => { alert(`Error : ${payload}`); return payload },\n    [addEntryError]: (_, { payload }) => { alert(`Error : ${payload}`); return payload },\n    [deleteEntryError]: (_, { payload }) => { alert(`Error : ${payload}`); return payload },\n})\n\nconst loading = createReducer(false, {\n    [fetchEntriesRequest]: () => true,\n    [fetchEntriesSuccess]: () => false,\n    [addEntryRequest]: () => true,\n    [addEntrySuccess]: () => false,\n    [addEntryError]: () => false,\n    [deleteEntryRequest]: () => true,\n    [deleteEntrySuccess]: () => false,\n    [deleteEntryError]: () => false,\n})\n\nexport default combineReducers({\n    entries,\n    loading,\n    error,\n})\n","\nimport { onChangeFilter } from './filter-actions';\nimport { createReducer } from '@reduxjs/toolkit';\n\nexport const filterReducer = createReducer('',\n    {\n        [onChangeFilter]: (_, action) => action.payload\n    });","import { createReducer, combineReducers } from '@reduxjs/toolkit';\nimport authActions from './auth-actions';\n\nconst initialUserState = {\n    name: null,\n    email: null\n}\n\nconst user = createReducer(initialUserState, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.user,\n    [authActions.loginSuccess]: (_, { payload }) => payload.user,\n    [authActions.logoutSuccess]: () => initialUserState,\n    [authActions.getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n    [authActions.registerSuccess]: (_, { payload }) => payload.token,\n    [authActions.loginSuccess]: (_, { payload }) => payload.token,\n    [authActions.logoutSuccess]: () => null,\n});\n\nconst error = createReducer(null, {\n    [authActions.registerError]: (_, { payload }) => payload,\n    [authActions.loginError]: (_, { payload }) => payload,\n    [authActions.logoutError]: (_, { payload }) => payload,\n    [authActions.getCurrentUserError]: (_, { payload }) => payload\n});\n\nconst isLoggedIn = createReducer(false, {\n    [authActions.registerSuccess]: () => true,\n    [authActions.loginSuccess]: () => true,\n    [authActions.getCurrentUserSuccess]: () => true,\n    [authActions.logoutSuccess]: () => false,\n    [authActions.registerError]: () => false,\n    [authActions.loginError]: () => false,\n    [authActions.getCurrentUserError]: () => false\n})\n\nexport default combineReducers({\n    user,\n    token,\n    isLoggedIn,\n    error\n});","import { combineReducers } from 'redux';\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport {\n    persistStore,\n    persistReducer,\n    FLUSH,\n    REHYDRATE,\n    PAUSE,\n    PERSIST,\n    PURGE,\n    REGISTER,\n} from 'redux-persist';\nimport entryReducer from './entries/entries-reducer';\nimport { filterReducer } from './filter/filter-reducer';\nimport authReducer from './auth/auth-reducer';\nimport storage from 'redux-persist/lib/storage';\n\nconst middleware = [\n    ...getDefaultMiddleware({\n        serializableCheck: {\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n        },\n    }),\n];\n\nconst authPersistConfig = {\n    key: 'auth',\n    storage,\n    whitelist: ['token']\n}\n\nconst contactsReducer = combineReducers({\n    items: entryReducer,\n    filter: filterReducer,\n})\n\nconst rootReducer = combineReducers({\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n})\n\n\nconst store = configureStore({ reducer: rootReducer }, middleware);\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };","import React from 'react';\nimport styles from './UserMenu.module.css';\nimport { useDispatch } from 'react-redux';\nimport authOps from '../../redux/auth/auth-operations';\n\nexport default function UserMenu({ email }) {\n  const dispatch = useDispatch();\n\n  const onLogout = () => dispatch(authOps.logout());\n\n  return (\n    <>\n      <div className={styles.userMenu}>\n        <span className={styles.userEmail}>{email}</span>\n        <button className={styles.logoutBtn} type=\"button\" onClick={onLogout}>\n          Log out\n        </button>\n      </div>\n    </>\n  );\n}\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './AuthMenu.module.css';\n\nconst AuthMenu = () => {\n  return (\n    <div className={s.userNav}>\n      <NavLink\n        className=\"navLink\"\n        activeClassName=\"activeNavLink\"\n        exact\n        to=\"/login\"\n      >\n        Log in\n      </NavLink>\n      <NavLink\n        className=\"navLink\"\n        activeClassName=\"activeNavLink\"\n        exact\n        to=\"/register\"\n      >\n        Sign up\n      </NavLink>\n    </div>\n  );\n};\n\nexport default AuthMenu;\n","import { NavLink } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { isAuthentificated } from '../../redux/auth/auth-selectors';\nimport s from './Navigation.module.css';\n\nexport default function Navigation() {\n  const isLoding = useSelector(isAuthentificated);\n\n  return (\n    <nav className={s.nav}>\n      <NavLink to=\"/\" exact className={s.link} activeClassName=\"activeNavLink\">\n        Home\n      </NavLink>\n\n      {isLoding && (\n        <NavLink\n          to=\"/contacts\"\n          exact\n          className={s.link}\n          activeClassName=\"activeNavLink\"\n        >\n          Contacts\n        </NavLink>\n      )}\n    </nav>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport UserMenu from '../UserMenu';\nimport AuthMenu from '../AuthMenu';\nimport Navigation from '../Navigation';\nimport {\n  isAuthentificated,\n  currentUserEmail,\n} from '../../redux/auth/auth-selectors';\nimport s from './NavHeader.module.css';\n\nconst NavHeader = ({ isAuthentificated, currentUserEmail }) => {\n  return (\n    <header className={s.header}>\n      <Navigation />\n      {isAuthentificated ? <UserMenu email={currentUserEmail} /> : <AuthMenu />}\n    </header>\n  );\n};\n\nconst mapStateToProps = state => ({\n  isAuthentificated: isAuthentificated(state),\n  currentUserEmail: currentUserEmail(state),\n});\n\nexport default connect(mapStateToProps)(NavHeader);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { isAuthentificated } from '../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут приватный и пользователь залогинен, рендерит компонент\n * - В противном случае рендерит Redirect на /login\n */\nconst PrivateRoute = ({\n    component: Component,\n    isAuthentificated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n            isAuthentificated ? <Component {...props} /> : <Redirect to={redirectTo} />\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthentificated: isAuthentificated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { isAuthentificated } from '../redux/auth/auth-selectors';\n\n/**\n * - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на /todos\n * - В противном случае рендерит компонент\n */\nconst PublicRoute = ({\n    component: Component,\n    isAuthentificated,\n    redirectTo,\n    ...routeProps\n}) => (\n    <Route\n        {...routeProps}\n        render={props =>\n            isAuthentificated && routeProps.restricted ? (\n                <Redirect to={redirectTo} />\n            ) : (\n                <Component {...props} />\n            )\n        }\n    />\n);\n\nconst mapStateToProps = state => ({\n    isAuthentificated: isAuthentificated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);","const routes = {\n  home: '/',\n  register: '/register',\n  login: '/login',\n  contacts: '/contacts',\n};\n\nexport default routes;\n","import React, { Suspense, lazy, useEffect } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport NavHeader from './components/NavHeader';\nimport authOps from './redux/auth/auth-operations';\nimport PrivateRoute from './components/PrivateRoute';\nimport PublicRoute from './components/PublicRoute';\nimport routes from './routes';\n\nconst DefaultView = lazy(() =>\n  import('./views/DefaultView' /* webpackChunkName: \"home-view\" */),\n);\nconst LoginView = lazy(() =>\n  import('./views/LoginView' /* webpackChunkName: \"login-view\" */),\n);\nconst RegisterView = lazy(() =>\n  import('./views/RegisterView' /* webpackChunkName: \"register-view\" */),\n);\nconst ContactsView = lazy(() =>\n  import('./views/ContactsView' /* webpackChunkName: \"contacts-view\" */),\n);\nconst DefaultLoggedInView = lazy(() =>\n  import(\n    './views/DefaultLoggedInView' /* webpackChunkName: \"not-found-view\" */\n  ),\n);\n\nexport default function App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => dispatch(authOps.getCurrentUser()), [dispatch]);\n\n  return (\n    <>\n      <NavHeader />\n      <Suspense fallback={<p>Loading...</p>}>\n        <Switch>\n          <PublicRoute\n            path={routes.login}\n            component={LoginView}\n            redirectTo={routes.contacts}\n            restricted\n          />\n          <PublicRoute\n            path={routes.register}\n            component={RegisterView}\n            redirectTo={routes.contacts}\n            restricted\n          />\n          <PrivateRoute\n            path={routes.contacts}\n            component={ContactsView}\n            redirectTo={routes.login}\n          />\n          <PublicRoute\n            path={routes.home}\n            component={DefaultLoggedInView}\n            redirectTo={routes.login}\n          />\n          <Route component={DefaultView} />\n        </Switch>\n      </Suspense>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nfunction gitLive() {\n  console.log('qwe');\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const addEntryRequest = createAction('entry/addEntryRequest');\nexport const addEntrySuccess = createAction('entry/addEntrySuccess');\nexport const addEntryError = createAction('entry/addEntryError');\n\nexport const deleteEntryRequest = createAction('entry/deleteEntryRequest');\nexport const deleteEntrySuccess = createAction('entry/deleteEntrySuccess');\nexport const deleteEntryError = createAction('entry/deleteEntryError');\n\nexport const fetchEntriesRequest = createAction('entry/fetchEntriesRequest');\nexport const fetchEntriesSuccess = createAction('entry/fetchEntriesSuccess');\nexport const fetchEntriesError = createAction('entry/fetchEntriesError');\n\n"],"sourceRoot":""}