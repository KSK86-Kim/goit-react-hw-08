{"version":3,"sources":["views/LoginView/LoginView.jsx","../node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/@babel/runtime/helpers/esm/nonIterableRest.js"],"names":["LoginView","useState","email","setEmail","password","setPassword","dispatch","useDispatch","onInputChange","event","input","target","dataset","role","value","className","onSubmit","preventDefault","authOps","login","reset","type","required","onChange","data-role","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","length","err","unsupportedIterableToArray","TypeError"],"mappings":"qNAIe,SAASA,IACtB,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAS,IAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KAEMC,EAAWC,cAEXC,EAAgB,SAAAC,GACpB,IAAMC,EAAQD,EAAME,OACpB,OAAQD,EAAME,QAAQC,MACpB,IAAK,QACHV,EAASO,EAAMI,OACf,MACF,IAAK,WACHT,EAAYK,EAAMI,OAClB,MACF,QACE,SASN,OACE,sBAAKC,UAAU,YAAf,UACE,uCACA,uBAAMA,UAAU,YAAYC,SARV,SAAAP,GACpBA,EAAMQ,iBACNX,EAASY,IAAQC,MAAM,CAAEjB,QAAOE,cAChCK,EAAME,OAAOS,SAKX,UACE,wBAAOL,UAAU,aAAjB,mBAEE,uBACEA,UAAU,aACVM,KAAK,OACLC,UAAQ,EACRC,SAAUf,EACVgB,YAAU,aAGd,wBAAOT,UAAU,aAAjB,qBAEE,uBACEA,UAAU,aACVM,KAAK,OACLC,UAAQ,EACRC,SAAUf,EACVgB,YAAU,gBAGd,wBAAQH,KAAK,SAAb,2B,8ECjDO,SAASI,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGxB,QAETa,GAAKM,EAAKU,SAAWhB,GAH8CO,GAAK,IAK9E,MAAOU,GACPT,GAAK,EACLC,EAAKQ,EACL,QACA,IACOV,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAkB,EAAA,GAA2BnB,EAAKC,IGLjF,WACb,MAAM,IAAImB,UAAU,6IHIgF","file":"static/js/login-view.599618d7.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport authOps from '../../redux/auth/auth-operations';\n\nexport default function LoginView() {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const dispatch = useDispatch();\n\n  const onInputChange = event => {\n    const input = event.target;\n    switch (input.dataset.role) {\n      case 'email':\n        setEmail(input.value);\n        break;\n      case 'password':\n        setPassword(input.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const onLoginSubmit = event => {\n    event.preventDefault();\n    dispatch(authOps.login({ email, password }));\n    event.target.reset();\n  };\n  return (\n    <div className=\"container\">\n      <h1>Login</h1>\n      <form className=\"inputForm\" onSubmit={onLoginSubmit}>\n        <label className=\"inputLabel\">\n          E-mail\n          <input\n            className=\"inputField\"\n            type=\"text\"\n            required\n            onChange={onInputChange}\n            data-role=\"email\"\n          />\n        </label>\n        <label className=\"inputLabel\">\n          Password\n          <input\n            className=\"inputField\"\n            type=\"text\"\n            required\n            onChange={onInputChange}\n            data-role=\"password\"\n          />\n        </label>\n        <button type=\"submit\">Login</button>\n      </form>\n    </div>\n  );\n}\n","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}"],"sourceRoot":""}